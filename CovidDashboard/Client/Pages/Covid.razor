@page "/covid"
@using CovidDashboard.Shared
@using System.Reflection
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>Covid Data</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (ChartData == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="control-section">
        <RadzenDropDown AllowClear="true" AllowFiltering="true" TValue="string"
                        FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" FilterOperator="StringFilterOperator.StartsWith" Placeholder="Select..."
                        @bind-Value="dropDownValue"
                        Data="@properties" TextProperty="Stat" Style="margin-bottom: 20px" Change="@(args => Change(args, "DropDown with placeholder"))" />
        <RadzenChart>
            <RadzenLineSeries Data="@ChartData" CategoryProperty="Date" Title="@selectedChart" ValueProperty="Value">
                <RadzenMarkers MarkerType="MarkerType.Circle" />
            </RadzenLineSeries>
            <RadzenValueAxis>
                <RadzenGridLines Visible="true" />
                <RadzenAxisTitle Text="Charting" />
            </RadzenValueAxis>
        </RadzenChart>
    </div>
}

@code {
    public List<LineChartData> ChartData;
    public IList<string> properties;
    public string selectedChart;
    public string dropDownValue;

    protected override async Task OnInitializedAsync()
    {
        CreatePropertiesDropdownItems();

        ChartData = await Http.GetFromJsonAsync<List<LineChartData>>("api/Covid/GetTexasDailyStats");

        selectedChart = "Positive";
        dropDownValue = selectedChart;
        Console.WriteLine("chart is " + ChartData.Count);
    }

    private void CreatePropertiesDropdownItems()
    {
        properties = new List<string>();
        var propertyInfo = typeof(DailyStatus).GetProperties();
        foreach (PropertyInfo info in propertyInfo)
        {
            properties.Add(info.Name);
        }
    }

    private async void Change(object args, string dropdownWithCustomFilterOperator)
    {
        try
        {
            if (string.IsNullOrWhiteSpace(dropDownValue))
                return;

            selectedChart = dropDownValue;
            ChartData.Clear();

            ChartData = await Http.GetFromJsonAsync<List<LineChartData>>($"api/Covid/GetTexasDailyStat/{dropDownValue}");
        }
        catch (Exception exception)
        {
            Console.WriteLine(exception);
        }
    }
}
